restartcheck_params = {}
restartcheck_params["atol"] = 1.0E-10
restartcheck_params["rtol"] = 4.0E-9

# format: (<input>, <desc>, <partition_list>, <restart_step>, <total_steps>)
decks = (
    ("sourceFlux_1d", "Single phase flow test (1D, compressible, source flux)", ((1, 1, 1), (2, 1, 1), (3, 1, 1)), 10,
     20),
    ("compressible_1d", "Single phase flow test (1D, compressible, Dirichlet BC)", ((1, 1, 1), (2, 1, 1), (3, 1, 1)),
     10, 20),
    ("compressible_1d_2solids",
     "Single phase flow test (1D, compressible, Dirichlet BC, 2 regions with different solids)", ((1, 1, 1), (2, 1, 1),
                                                                                                  (3, 1, 1)), 10, 20),
    (
        "incompressible_1d",
        "Single phase flow test (1D, steady-state incompressible, Dirichlet BC)",
        ((1, 1, 1), (2, 1, 1), (3, 1, 1)),
        0,
        1    # steady state, so no restart
    ),
    (
        "incompressible_pebi3d",
        "Single phase flow test (3D PEBI grid, steady-state incompressible, Dirichlet BC)",
        ((1, 1, 1), (2, 1, 1), (3, 1, 1)),
        0,
        1    # steady state, so no restart
    ),
    ("compressible_2d_2fluids",
     "Single phase flow test (2D, compressible, Dirichlet BC, 2 regions with different fluids, trans multipliers)",
     ((1, 1, 1), (2, 1, 1), (3, 1, 1)), 10, 20),
    ("compressible_2d_2fluids_hybrid",
     "Single phase flow test (2D, compressible, Dirichlet BC, 2 regions with different fluids, trans multipliers)",
     ((1, 1, 1), (2, 1, 1), (3, 1, 1)), 10, 20),
    ("sourceFlux_2d", "Single phase flow test (2D, incompressible)", ((1, 1, 1), (2, 2, 1), (3, 3, 1)), 10, 20),
    ("staircase_3d", "Single phase flow test (3D, compressible, gravity, face boundary conditions)",
     ((1, 1, 1), (2, 2, 2), (3, 3, 3)), 10, 20))

for deck, description, partitions, restart, num_steps in decks:
    for partition in partitions:
        nx = partition[0]
        ny = partition[1]
        nz = partition[2]
        N = nx * ny * nz

        testcase_name = "%s_%02d" % (deck, N)
        base_name = "0to%d" % num_steps

        steps = (geos(deck=deck + ".xml",
                      name=base_name,
                      np=N,
                      ngpu=N,
                      x_partitions=nx,
                      y_partitions=ny,
                      z_partitions=nz,
                      restartcheck_params=restartcheck_params), )

        if restart > 0:
            steps += (geos(deck=deck + ".xml",
                           name="%dto%d" % (restart, num_steps),
                           np=N,
                           ngpu=N,
                           x_partitions=nx,
                           y_partitions=ny,
                           z_partitions=nz,
                           restart_file=os.path.join(testcase_name, "%s_restart_%09d" % (base_name, restart)),
                           baseline_pattern="%s_restart_[0-9]+\.root" % base_name,
                           allow_rebaseline=False,
                           restartcheck_params=restartcheck_params), )

        TestCase(name=testcase_name,
                 desc=description,
                 label="auto",
                 owner="Sergey Klevtsov",
                 independent=True,
                 steps=steps)
