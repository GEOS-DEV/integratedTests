# format: (<input>, <desc>, <partition_list>, <restart_step>, <total_steps>, <restartcheck_params>)
decks = (("SlipPermeability_pEDFM_smoke", "pEDFM slip dependent permeability case", ((1, 1, 1), (2, 2, 1)), 0, 1, {
    "atol": 1.0E-7,
    "rtol": 4.0E-6
}), ("WillisRichardsPermeability_EDFM", "WillisRichards Permeability model with EDFM", ((1, 1, 1), (2, 2, 1)), 0, 5, {
    "atol": 1.0E-7,
    "rtol": 4.0E-6
}), ("PoroElastic_conformingFracture_2d_openingFrac_horizontal", "PoroElastic conformingFracture 2d case",
     ((1, 1, 1), (2, 2, 1)), 0, 10, {
         "atol": 1.0E-7,
         "rtol": 4.0E-6
     }), ("PoroElastic_conformingFracture_2d_openingFrac_vertical", "PoroElastic conformingFracture 2d case",
          ((1, 1, 1), (2, 2, 1)), 0, 10, {
              "atol": 1.0E-7,
              "rtol": 4.0E-6
          }), ("PoroElastic_efem-edfm_pressurizedFrac_smoke", "poromechanics efem-edfm pressurized vertical frac",
               ((1, 1, 1), (2, 2, 1)), 0, 1, {
                   "atol": 1.0E-7,
                   "rtol": 4.0E-6
               }), ("PoroElastic_efem-edfm_verticalFrac_smoke", "poromechanics efem-edfm vertical frac",
                    ((1, 1, 1), (2, 2, 1)), 0, 1, {
                        "atol": 1.0E-7,
                        "rtol": 4.0E-6
                    }), ("PoroElastic_efem-edfm_inclinedFrac_smoke", "poromechanics efem-edfm inclined frac",
                         ((1, 1, 1), (2, 2, 1)), 0, 1, {
                             "atol": 1.0E-7,
                             "rtol": 4.0E-6
                         }), ("ExponentialDecayPermeability_edfm", "Exponential Decay Permeability model with EDFM",
                              ((1, 1, 1), (2, 2, 1)), 0, 5, {
                                  "atol": 1.0E-7,
                                  "rtol": 4.0E-6
                              }),
         ("ExponentialDecayPermeability_conformingFracture",
          "Exponential Decay Permeability model with conforming fracture", ((1, 1, 1), (2, 2, 1)), 0, 12, {
              "atol": 1.0E-5,
              "rtol": 4.0E-4
          }))

import geos_ats 
from geos_ats.test_builder import generate_geos_tests_1

generate_geos_tests_1( decks, restartcheck_params )