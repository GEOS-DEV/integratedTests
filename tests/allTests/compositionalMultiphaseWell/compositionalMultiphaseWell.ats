restartcheck_params = {}
restartcheck_params["atol"] = 1.0E-6
restartcheck_params["rtol"] = 1.0E-5

# exclude any derivative fields from restart checks
# example field name: dGlobalComponentFraction_dPressure
#restartcheck_params["exclude"] = [r"d[A-Z]\w+_d[A-Z]\w+"]

decks = (
    ("compositional_multiphase_wells_1d",
     "Compositional multiphase well test (1D displacement, 2-phase 4-component, 2 wells)", ((1, 1, 1), (2, 1,
                                                                                                        1)), 5, 10),
    (
        "compositional_multiphase_wells_2d",
        "Compositional multiphase flow test (2D displacement, 2-phase 4-component, 3 wells)",
        ((1, 1, 1), (2, 2, 1)),    #(3, 3, 1)), 
        3,
        7),
    (
        "dead_oil_wells_2d",
        "Dead oil well test (2D displacement, 3-phase dead-oil, 3 wells)",
        ((1, 1, 1), (2, 2, 1)),    # (3, 3, 1)), 
        50,
        100),
    (
        "dead_oil_wells_hybrid_2d",
        "Dead oil well test (2D displacement, hybrid FVM, 3-phase dead-oil, 3 wells)",
        ((1, 1, 1), (2, 2, 1)),    # (3, 3, 1)), 
        50,
        100),
    (
        "black_oil_wells_saturated_3d",
        "Black oil well test (3D displacement, 3-phase black-oil, 2 wells)",
        ((1, 1, 1), (2, 2, 1)),    # (3, 3, 1)), 
        13,
        25),
    (
        "black_oil_wells_unsaturated_3d",
        "Black oil well test (3D displacement, hybrid FVM, 3-phase black-oil, 2 wells)",
        ((1, 1, 1), (2, 2, 1)),    # (3, 3, 1)), 
        8,
        12),
    (
        "staircase_co2_wells_3d",
        "CO2 well test (3D staircase, 2-phase 2-component, 2 wells)",
        ((1, 1, 1), (2, 2, 2)),    # (3, 3, 3)), 
        3,
        5),
    (
        "staircase_co2_wells_hybrid_3d",
        "CO2 well test (3D staircase, unstructured mesh, hybrid FVM, 2-phase 2-component, 2 wells)",
        ((1, 1, 1), (2, 2, 2)),    #(3, 3, 3)), 
        0,
        17),
    (
        "deadOilEgg_smoke_3d",
        "Smoke test for the Egg model (3D displacement, structured mesh, 2-phase dead-oil, many wells)",
        ((1, 1, 1), (0, 0, 0)),    #(3, 3, 3)),
        20,
        35),
    ("class09_pb3_smoke_3d", "Smoke test for the Johansen model (3D displacement, structured mesh, CO2-brine)",
     ((1, 1, 1), (2, 2, 2)), 5, 10))

for deck, description, partitions, restart, num_steps in decks:
    for partition in partitions:
        nx = partition[0]
        ny = partition[1]
        nz = partition[2]
        N = nx * ny * nz

        if N > 0:
            testcase_name = "%s_%02d" % (deck, N)
            base_name = "0to%d" % num_steps

            steps = (geos(deck=deck + ".xml",
                          name=base_name,
                          np=N,
                          ngpu=N,
                          x_partitions=nx,
                          y_partitions=ny,
                          z_partitions=nz,
                          restartcheck_params=restartcheck_params), )

            if restart > 0:
                steps += (geos(deck=deck + ".xml",
                               name="%dto%d" % (restart, num_steps),
                               np=N,
                               ngpu=N,
                               x_partitions=nx,
                               y_partitions=ny,
                               z_partitions=nz,
                               restart_file=os.path.join(testcase_name, "%s_restart_%09d" % (base_name, restart)),
                               baseline_pattern="%s_restart_[0-9]+\.root" % base_name,
                               allow_rebaseline=False,
                               restartcheck_params=restartcheck_params), )

            TestCase(name=testcase_name,
                     desc=description,
                     label="auto",
                     owner="Francois Hamon",
                     independent=True,
                     steps=steps)
