restartcheck_params = {}
restartcheck_params["atol"] = 1.0E-4
restartcheck_params["rtol"] = 2.0E-5

# format: (<input>, <desc>, <partition_list>, <restart_step>, <total_steps>)
decks = (("elas3D_abc_smoke", "Elastic wave solver, first-order FE, absorbing BC", ((1, 1, 1), (2, 2, 2)), 100, 200),
         ("elas3D_abc_fs_smoke",
          "Elastic wave solver, first-order FE, absorbing BC on the sides, free surface BC at the top",
          ((1, 1, 1), (2, 2, 2)), 100, 200))

for deck, description, partitions, restart, num_steps in decks:
    for partition in partitions:
        nx = partition[0]
        ny = partition[1]
        nz = partition[2]
        N = nx * ny * nz

        testcase_name = "%s_%02d" % (deck, N)
        base_name = "0to%d" % num_steps

        steps = (geos(deck=deck + ".xml",
                      name=base_name,
                      np=N,
                      ngpu=N,
                      x_partitions=nx,
                      y_partitions=ny,
                      z_partitions=nz,
                      restartcheck_params=restartcheck_params), )

        if restart > 0:
            steps += (geos(deck=deck + ".xml",
                           name="%dto%d" % (restart, num_steps),
                           np=N,
                           ngpu=N,
                           x_partitions=nx,
                           y_partitions=ny,
                           z_partitions=nz,
                           restart_file=os.path.join(testcase_name, "%s_restart_%09d" % (base_name, restart)),
                           baseline_pattern="%s_restart_[0-9]+\.root" % base_name,
                           allow_rebaseline=False,
                           restartcheck_params=restartcheck_params), )

        TestCase(name=testcase_name,
                 desc=description,
                 label="auto",
                 owner="Mamadou Ndiaye and Aurelien Citrain",
                 independent=True,
                 steps=steps)
